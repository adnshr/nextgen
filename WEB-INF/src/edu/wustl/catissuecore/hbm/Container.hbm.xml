<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE hibernate-mapping PUBLIC
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<hibernate-mapping>
    <class
        name="edu.wustl.catissuecore.domain.Container"
        table="CATISSUE_CONTAINER"
        dynamic-update="false"
        dynamic-insert="false"
		lazy="true"
    >
    
    <cache usage="read-write" />

        <id
            name="id"
            column="IDENTIFIER"
            type="long"
            length="30"
            unsaved-value="null"
        >
            <generator class="native">
                <param name="sequence">CATISSUE_CONTAINER_SEQ</param>
            </generator>
        </id>

        <property
            name="activityStatus"
            type="string"
            update="true"
            insert="true"
            column="ACTIVITY_STATUS"
            length="50"
        />
			<one-to-one
            name="locatedAtPosition"
	            class="edu.wustl.catissuecore.domain.ContainerPosition"
	            cascade="save-update"
	            outer-join="auto"
	            constrained="false"
		     	property-ref="occupiedContainer"
	       />
	       
	        <set
	            name="occupiedPositions"
	            table="CATISSUE_CONTAINER_POSITION"
	            lazy="true"
	            inverse="true"
	            cascade="delete-orphan"
	            sort="unsorted"
	        >
	        
	        <cache usage="read-write" />
	
	              <key
	                  column="PARENT_CONTAINER_ID"
	              />
	
	              <one-to-many
	                  class="edu.wustl.catissuecore.domain.ContainerPosition"
	              />
	        </set>
        <property
            name="barcode"
            type="string"
            update="true"
            insert="true"
            column="BARCODE"
            length="255"
        />

        <many-to-one
            name="capacity"
            class="edu.wustl.catissuecore.domain.Capacity"
            cascade="none"
            outer-join="auto"
            update="true"
            insert="true"
            column="CAPACITY_ID"
        />
        
         <property
            name="comment"
            type="string"
            update="true"
            insert="true"
            column="COMMENTS"
            length="2000"
        />

        <property
            name="full"
            type="boolean"
            update="true"
            insert="true"
            column="CONT_FULL"
        />

        <property
            name="name"
            type="string"
            update="true"
            insert="true"
            column="NAME"
            length="255"
        />

        <!--
            To add non XDoclet property mappings, create a file named
                hibernate-properties-Container.xml
            containing the additional properties and place it in your merge dir.
        -->

        <joined-subclass
            name="edu.wustl.catissuecore.domain.SpecimenArray"
            table="CATISSUE_SPECIMEN_ARRAY"
            dynamic-update="false"
            dynamic-insert="false"
			lazy="true"
        >
        
        <key
            column="IDENTIFIER"
        />

        <set
            name="newSpecimenArrayOrderItemCollection"
            table="CATISSUE_NEW_SP_AR_ORDER_ITEM"
            lazy="true"
            inverse="false"
            cascade="none"
            sort="unsorted"
        >
        
        <cache usage="read-write" />

              <key
                  column="SPECIMEN_ARRAY_ID"
              />

              <one-to-many
                  class="edu.wustl.catissuecore.domain.NewSpecimenArrayOrderItem"
              />
        </set>

        <many-to-one
            name="createdBy"
            class="edu.wustl.catissuecore.domain.User"
            cascade="none"
            outer-join="auto"
            update="true"
            insert="true"
            column="CREATED_BY_ID"   	lazy="false" 
        />

        <set
            name="specimenArrayContentCollection"
            table="CATISSUE_SPECI_ARRAY_CONTENT"
            lazy="true"
            inverse="false"
            cascade="none"
            sort="unsorted"
        >
        
        <cache usage="read-write" />

              <key
                  column="SPECIMEN_ARRAY_ID"
              />

              <one-to-many
                  class="edu.wustl.catissuecore.domain.SpecimenArrayContent"
              />
        </set>

        <many-to-one
            name="specimenArrayType"
            class="edu.wustl.catissuecore.domain.SpecimenArrayType"
            cascade="none"
            outer-join="auto"
            update="true"
            insert="true"
            column="SPECIMEN_ARRAY_TYPE_ID"  lazy="false"
        />

       <property
            name="available"
            type="boolean"
            update="true"
            insert="true"
            column="AVAILABLE"
        />
        
        </joined-subclass>
        <joined-subclass
            name="edu.wustl.catissuecore.domain.StorageContainer"
            table="CATISSUE_STORAGE_CONTAINER"
            dynamic-update="false"
            dynamic-insert="false"
			lazy="true"
        >
        <key
            column="IDENTIFIER"
        />
        
 		<set
            name="specimenPositionCollection"
            table="CATISSUE_SPECIMEN_POSITION"
            lazy="true"
            inverse="true"
            cascade="none"
            sort="unsorted"
        >
        
        <cache usage="read-write" />

              <key
                  column="CONTAINER_ID"
              />

              <one-to-many
                  class="edu.wustl.catissuecore.domain.SpecimenPosition"
              />
        </set>
        
        <set
            name="collectionProtocolCollection"
            table="CATISSUE_ST_CONT_COLL_PROT_REL"
            lazy="false" fetch="join"
            inverse="false"
            cascade="none"
            sort="unsorted"
        >
        
        <cache usage="read-write" />

              <key
                  column="STORAGE_CONTAINER_ID"
              />

              <many-to-many
                  class="edu.wustl.catissuecore.domain.CollectionProtocol"
                  column="COLLECTION_PROTOCOL_ID"
                  outer-join="auto"  
              />

        </set>

        <set
            name="holdsSpecimenClassCollection"
            table="CATISSUE_STOR_CONT_SPEC_CLASS"
            lazy="false" fetch="join"
            inverse="false"
            cascade="save-update"
            sort="unsorted"
        >
        
        <cache usage="read-write" />

              <key
                  column="STORAGE_CONTAINER_ID"
              />
			
			<element column="SPECIMEN_CLASS" type="string" length="50"/>
        </set>
		<set
            name="holdsSpecimenTypeCollection"
            table="CATISSUE_STOR_CONT_SPEC_TYPE"
            lazy="false" fetch="join"
            inverse="false"
            cascade="save-update"
            sort="unsorted"
        >
        
        <cache usage="read-write" />

              <key
                  column="STORAGE_CONTAINER_ID"
              />
			
			<element column="SPECIMEN_TYPE" type="string" length="50"/>
        </set>
        <set
            name="holdsStorageTypeCollection"
            table="CATISSUE_ST_CONT_ST_TYPE_REL"
            lazy="false" fetch="join"
            inverse="false"
            cascade="none"
            sort="unsorted"
        >
        
        <cache usage="read-write" />

              <key
                  column="STORAGE_CONTAINER_ID"
              />

              <many-to-many
                  class="edu.wustl.catissuecore.domain.StorageType"
                  column="STORAGE_TYPE_ID"
                  outer-join="auto" lazy="false"
              />

        </set>
        <set
            name="holdsSpecimenArrayTypeCollection"
            table="CATISSUE_CONT_HOLDS_SPARRTYPE"
            lazy="false" fetch="join"
            inverse="false"
            cascade="none"
            sort="unsorted"
        >
        
        <cache usage="read-write" />

              <key
                  column="STORAGE_CONTAINER_ID"
              />

              <many-to-many
                  class="edu.wustl.catissuecore.domain.SpecimenArrayType"
                  column="SPECIMEN_ARRAY_TYPE_ID"
                  outer-join="auto"
              />
        </set>
        
        <many-to-one
            name="site"
            class="edu.wustl.catissuecore.domain.Site"
            cascade="none"
            outer-join="auto"
            update="true"
            insert="true"
            column="SITE_ID" lazy="false"
        />

        <property
            name="tempratureInCentigrade"
            type="double"
            update="true"
            insert="true"
            column="TEMPERATURE"
            length="30"
        />
        
        <property
            name="oneDimensionLabellingScheme"
            type="string"
            update="true"
            insert="true"
            column="one_Dimension_Labelling_Scheme"
            length="30"
        />
        <property
            name="twoDimensionLabellingScheme"
            type="string"
            update="true"
            insert="true"
            column="two_Dimension_Labelling_Scheme"
            length="30"
        />

        <many-to-one
            name="storageType"
            class="edu.wustl.catissuecore.domain.StorageType"
            cascade="none"
            outer-join="auto"
            update="true"
            insert="true"
            column="STORAGE_TYPE_ID"   lazy="false"
        />

        </joined-subclass>
        
         

    </class>
<query name="getStorageContainerLabellingSchemesByName">
SELECT oneDimensionLabellingScheme,twoDimensionLabellingScheme FROM edu.wustl.catissuecore.domain.StorageContainer ST WHERE ST.name= ?
</query>

<query name="getStorageContainerLabellingSchemesById">
SELECT oneDimensionLabellingScheme,twoDimensionLabellingScheme FROM edu.wustl.catissuecore.domain.StorageContainer ST WHERE ST.id= ?
</query>

<query name="getStorageContainerIdByContainerName">Select ST.id from edu.wustl.catissuecore.domain.StorageContainer ST WHERE ST.name= ?
</query>

<query name="getStorageContainerDetailsByContainerName">SELECT STCONT.id, STCONT.oneDimensionLabellingScheme, STCONT.twoDimensionLabellingScheme, 
STCONT.storageType.oneDimensionLabel, STCONT.storageType.twoDimensionLabel, STCONT.capacity.oneDimensionCapacity, STCONT.capacity.twoDimensionCapacity 
FROM edu.wustl.catissuecore.domain.StorageContainer STCONT WHERE STCONT.name= ?
</query>

<query name="updateSiteOfChildContainer">UPDATE edu.wustl.catissuecore.domain.StorageContainer container SET container.site = ? WHERE container.name = ?
</query>

<query name="isPositionAvailable">
    select id from  edu.wustl.catissuecore.domain.SpecimenPosition specPos where specPos.storageContainer.name=? and specPos.positionDimensionOne=? and specPos.positionDimensionTwo=?
</query>
<query name="isPositionAvailableContainer">
    select id from  edu.wustl.catissuecore.domain.ContainerPosition contPos where contPos.parentContainer.name=? and contPos.positionDimensionOne=? and contPos.positionDimensionTwo=?
</query>
<query name="getStorageContainerIdByName">
    SELECT id FROM edu.wustl.catissuecore.domain.StorageContainer ST WHERE ST.name= ?
</query>

<query name="getCapacityByName">
     SELECT capacity FROM edu.wustl.catissuecore.domain.StorageContainer ST WHERE ST.name= ?
</query>
<query name="getAllocatedSpecimenPosition">
    SELECT positionDimensionOne,positionDimensionTwo from edu.wustl.catissuecore.domain.SpecimenPosition where storageContainer.name=?
</query>
<query name="getAllocatedContainerPosition">
    SELECT positionDimensionOne,positionDimensionTwo from edu.wustl.catissuecore.domain.ContainerPosition where parentContainer.name=?
</query>
<query name="getAssignedSpecimenCount">
	select count(*) from SpecimenPosition specPos where specPos.storageContainer.id=?
</query>
<query name="getChildContainerCount">
    select count(*) from ContainerPosition cntPos, StorageContainer container where cntPos.occupiedContainer.id=container.id and cntPos.parentContainer.id=?
</query>
<query name="getContainerCapacityCount">
    select cont.capacity.oneDimensionCapacity*cont.capacity.twoDimensionCapacity from StorageContainer cont where cont.id = ?
</query>
<query name="getStorageTypeCapacityFromContainerId">
	select st.capacity from StorageContainer cont, StorageType st where size(st.holdsSpecimenClassCollection)>0 and size(st.holdsSpecimenTypeCollection)>0 and cont.storageType.id=st.id and cont.id=?
</query>
<query name="getChildContainerIds">
	select cntPos.occupiedContainer.id from ContainerPosition cntPos, StorageContainer container where cntPos.occupiedContainer.id=container.id and cntPos.parentContainer.id=?
</query>
<query name="getIdOfAllContainers">
    select cont.id from Container cont where cont.activityStatus!='Disabled' 
</query>
<query name="getIdOfParentStorageContainers">
	select cont.id from Container cont where cont.activityStatus!='Disabled' and not exists (select cntPos.occupiedContainer.id from ContainerPosition cntPos where cont.id = cntPos.occupiedContainer.id) 
</query>
<query name="getContainerNameById">
    SELECT name FROM edu.wustl.catissuecore.domain.StorageContainer ST WHERE ST.id= ?
</query>
<query name="getIdOfParentStorageContainersBySiteName">
	select cont.id from StorageContainer cont, Site site where cont.activityStatus!='Disabled' and cont.site.id=site.id and site.name=? and not exists (select cntPos.occupiedContainer.id from ContainerPosition cntPos where cont.id = cntPos.occupiedContainer.id)
</query>
<query name="getCPIdsbyContainerID">select cp.id from edu.wustl.catissuecore.domain.StorageContainer as con left outer join  con.collectionProtocolCollection as cp where con.id = ?</query>
<sql-query name="insertIntoStorContSpecCountsTable">
	INSERT INTO catissue_stor_cont_utilization(STORAGE_CONTAINER_ID, STORED_SPECIMEN_COUNT, CONT_DATE, UTILIZATION_PERCENTAGE) VALUES(?,?,?,?) 
</sql-query>
<sql-query name="getStorContSpecCountDataById">
	select spec.CONT_DATE,spec.STORED_SPECIMEN_COUNT,spec.UTILIZATION_PERCENTAGE from catissue_stor_cont_utilization spec where spec.STORAGE_CONTAINER_ID=? order by spec.CONT_DATE, spec.STORAGE_CONTAINER_ID asc
</sql-query>

<sql-query name="getUtilizationCountsOfContainerById">
	select spec.UTILIZATION_PERCENTAGE,spec.STORED_SPECIMEN_COUNT from catissue_stor_cont_utilization spec where spec.STORAGE_CONTAINER_ID=? and spec.CONT_DATE = (select MAX(CONT_DATE) from catissue_stor_cont_utilization where STORAGE_CONTAINER_ID= ?)
</sql-query>

</hibernate-mapping>
